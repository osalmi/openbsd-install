#!/bin/sh

# Copyright (c) 2005-2011 Ossi Salmi
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

PKG_PATH=http://ftp.eu.openbsd.org/pub/OpenBSD/${VNAME}/packages/${ARCH}
#PKG_PATH=nfs://install/export/install/OpenBSD/${VNAME}/custom/packages/${ARCH}

echo "Basic directory structure."
mkdir -p /etc/local /usr/local/etc
mkdir -p /export /srv

echo "Installing additional packages:"
if echo ${PKG_PATH} | grep -q "^nfs:"; then
    _install="`echo ${PKG_PATH} | sed "s@nfs://\([^/]*\)\(.*\)@\1:\2@"`"
    mount -o ro,tcp ${_install} /mnt
    PKG_PATH=/mnt
fi
export PKG_PATH
ldconfig /usr/X11R6/lib /usr/local/lib
pkg_add -avx -l /install.pkgs

echo "Configuring packages."

echo "\nexport PS1='\h# '" >>/root/.profile
echo "set nocompatible" >>/root/.vimrc

# /bin/{bash,zsh} for compatibility
ln -s /usr/local/bin/bash /bin/bash && echo "/bin/bash" >> /etc/shells
ln -s /usr/local/bin/zsh /bin/zsh && echo "/bin/zsh" >> /etc/shells

(
    # set default python
    PYTHON=2.7
    cd /usr/local/bin
    for cmd in idle pydoc python python-config; do
        test -f ${cmd}${PYTHON} && ln -s ${cmd}${PYTHON} ${cmd}
    done
)
(
    # set default ruby
    RUBY=18
    cd /usr/local/bin
    for cmd in erb gem irb rake rdoc ri ruby testrb; do
        test -f ${cmd}${RUBY} && ln -s ${cmd}${RUBY} ${cmd}
    done
)

# silence /etc/{daily,weekly,monthly}
for i in /etc/{daily,weekly,monthly}.local; do
    echo "VERBOSESTATUS=0" > $i
done

echo "Configuring dhclient."
cp /etc/dhclient.conf /etc/dhclient.conf.orig
sed "s/PRIMARYDEV/${IFDEV}/" <${PROTODIR}/etc/dhclient.conf.in >/etc/dhclient.conf
MYGATE=`route -n show -inet | awk '/default/ { print $2; exit }'`
if [ "${MYGATE}" ]; then
    echo "${MYGATE}" | grep -q "^link" && MYGATE=127.0.0.1
    echo "supersede routers ${MYGATE};" >> /etc/dhclient.conf
fi

if [ -x /usr/local/sbin/puppetd -a -s /etc/puppet/ssl/certs/ca.pem ]; then
    echo "Bootstrapping puppet."
    /usr/local/sbin/puppetd -o --no-report --no-daemonize --pluginsync --tags bootstrap
fi

echo -n "Serial console:"
CONSOLE="$(dmesg | sed -n '/^com\([0-9]\): console$/s//\1/p' | sed '$!d')"
if [ "${CONSOLE}" ]; then
    echo " yes, redirecting console to com${CONSOLE}."
    ( cd /etc
      echo "set tty com${CONSOLE}" >> boot.conf
      cp ttys ttys.orig
      sed "/^tty0${CONSOLE}/s/unknown off/vt220	on secure/" ttys.orig > ttys
      rm -f ttys.orig )
else
    echo " no."
fi

if dmesg | grep -q "^bios0:.*KVM"; then
    echo "KVM detected, configuring kernel for compatibility."
    for bsd in /bsd /bsd.mp; do
        echo "disable mpbios\nquit" | config -ef ${bsd}
    done
fi

echo "Fixing permissions:"
mtree -e -U -p / -f /etc/mtree/special

rm -f /install.{pkgs,site}
umount /mnt 2>/dev/null
